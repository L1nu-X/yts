{"name":"YTS","tagline":"A python powered movie torrents downloader.","body":"## what is yts?.\r\nYTS is a python package that allows you to download HD movie torrents from web.It is also a python\r\nbinding for the official movie torrents https://yts.re.\r\n\r\n```python\r\n from yts import YTS\r\n y = YTS()\r\n y.torrents() # view all latest torrents\r\n y.download(6581) #Downloads the movie torrent with movieID and adds it to your default torrent client\r\n\r\n```\r\nSee how simple it is to download a movie within seconds.\r\n\r\n### Installation\r\nYou can install yts with a single pip command else download and run ./setup.py install from zip extracted.\r\n\r\n```\r\n$ sudo pip install yts\r\n\r\nC:> pip install yts\r\n\r\n``` \r\n\r\n### Features\r\n- Download movies with a single method\r\n- Download latest torrents\r\n- Search and download torrents\r\n- Query the information of interested movie\r\n- Chose movies with quality,ratings,name,date added etc.\r\n- Redirect torrent to your favorite torrent client\r\n- 100% magnets authenticity\r\n\r\n##API\r\nThe main classes in the yts library are \r\n* YTS\r\n* Movie\r\n\r\n###YTS\r\n\r\nYTS is a class that deals with listing of latest,upcoming,requested torrents from official yify website.It also provides methods for:\r\n\r\n* Searching movie torrent\r\n* Logging in to https://yts.re\r\n* comment upon a movie torrent\r\n* Get all confirmed request torrents list\r\n\r\n***\r\n```\r\nclass YTS(username=None,password=None)\r\n```\r\n\r\nYTS class can be instantiated with username,password of yify website.arguments are optional.Some functions like post comment,etc will only work if you are logged in. \r\n***\r\n```\r\ntorrents(self,limit=20,page=1,quality='ALL',rating=0,genre='ALL',sort='date')\r\n```\r\ntorrents method lists the torrents to download.select movieID from that listing to download movie\r\ntorrent on flash.Default display is 20 recently uploaded movies.optional parameters are:\r\n\r\n- limit (1-50) : specify limit of torrents displayed for a page\r\n- page (default 1): page no or step.If page=2 then next 20 results will be displayed.\r\n- quality ('720p' or '1080p'): select only movies with specified quality\r\n- genre ('comedy','action' etc): select movies only from specified genres \r\n- sort ('date','seeds' etc): factor on which sorting should occur\r\n\r\n***\r\n```\r\ndownload(movieId)\r\n```\r\nDownloads the movie torrent whose movieID is specified.movieID is observed from listed torrents\r\n\r\nEx:\r\n```python\r\ny =YTS()\r\ny.download(466) #466 is ID of movie\r\n``` \r\n***\r\n```\r\nlogin(username,password)\r\n```\r\nlogin method takes username and password for https://yts.re.It is essential if user needs to post comments on a movie torrent.\r\n\r\nEx:\r\n```python\r\n\r\ny =YTS()\r\ny.login('example_uname','example_pwd')\r\n\r\n```\r\n***\r\n```\r\nsearch(movie)\r\n```\r\nsearch method lists all torrents consisting movie name passed as argument.\r\n\r\nEx:\r\n```python\r\n\r\ny =YTS()\r\ny.search('matrix') #lists all movies with matrix in their title\r\n\r\n```\r\n***\r\n```\r\nupcoming()\r\n```\r\nupcoming method lists all torrents those are ready to be uploaded by uploaders.\r\n\r\nEx:\r\n```python\r\n\r\ny =YTS()\r\ny.upload()\r\n\r\n```\r\n***\r\n```\r\nrequests_confirmed()\r\n```\r\nThis method lists all confirmed movie requests in the format of {User:Movie Name}.\r\n\r\nEx:\r\n```python\r\n\r\ny =YTS()\r\ny.requests_confirmed()\r\n\r\n```\r\n***\r\n```\r\nrequest(movieName)\r\n```\r\nYou should log in first to access the method.This method submits your movieName to yify for consideration.\r\n\r\nEx:\r\n```python\r\n\r\ny =YTS()\r\ny.request('django unchained') #submits request to upload Django Unchained movie\r\n\r\n```\r\nfails if not logged in\r\n***\r\n```\r\ncomment(movieID,text)\r\n```\r\nYou should log in first to access the method.This method selects movie torrent specified and apply text as comment to it.\r\n\r\nEx:\r\n```python\r\n\r\ny =YTS()\r\ny.comment(466,'Awesome!') #comments as Awesome! for The Matrix Reloaded\r\n\r\n```\r\nfails if not logged in\r\n***\r\n\r\n###Movie\r\n\r\nMovie is a class that deals with all the attributes of a movie that available as a torrent to download.First you can check the things like,must be initialized with a movieID\r\n- movie details summary\r\n- no of seeds\r\n- IMDB link\r\n- YouTube official trailer\r\n- Cast\r\n- Genres\r\n- Description\r\n\r\n\r\n***\r\n```\r\nmovie()\r\n```\r\nDisplays the summary of the movie.\r\n\r\nEx:\r\n```python\r\nfrom yts import Movie\r\nm = Movie(466)\r\nm.movie() #summary of The Matrix reloaded\r\n``` \r\n***\r\n```\r\nimdb()\r\n```\r\nOpens IMDB link of movie in browser to explore details\r\n\r\nEx:\r\n```python\r\nm = Movie(466)\r\nm.imdb() \r\n``` \r\n***\r\n```\r\ntrailer()\r\n```\r\nOpens official YouTube trailer of the movie in browser\r\n\r\nEx:\r\n```python\r\nm = Movie(466)\r\nm.trailer()\r\n``` \r\n***\r\n```\r\ncast()\r\n```\r\nDisplays cast and their roles in the movie.\r\n\r\nEx:\r\n```python\r\nm = Movie(466)\r\nm.cast()\r\n``` \r\n***\r\n```\r\nseeds()\r\n```\r\nReturns no of seeds available for a movie ,which tells the probable speed of downloading \r\n\r\nEx:\r\n```python\r\nm = Movie(466)\r\nprint m.seeds()\r\n``` \r\n***\r\n```\r\ngenres()\r\n```\r\nReturns genres to which movie belongs to \r\n\r\nEx:\r\n```python\r\nm = Movie(466)\r\nprint m.genres()\r\n``` \r\n***\r\n```\r\ndescription()\r\n```\r\nReturns the description of movie in a brief manner  \r\n\r\nEx:\r\n```python\r\nm = Movie(466)\r\nm.description()\r\n``` \r\n***\r\n```\r\ndownload()\r\n```\r\nEach movie instance has a download method by which we can download the torrent and add it to torrent client.It is almost similar to download method of YTS. \r\n\r\nEx:\r\n```python\r\nm = Movie(466)\r\nm.download() #Downloads movie torrent for you and adds it to client \r\n``` \r\n***\r\n\r\nIn order to get movieIDs we need to list all torrents by applying filters and chose favorite one.Then by observing that movieID we need to create an instance of message and access information about it.\r\n\r\n###Raw Data\r\n\r\nYou can also get many other details for movies and yify movie torrents using raw methods on the YTS and Movie classes.\r\nA dictionary with all details will be returned,you can use that in your applications.remember raw methods are faster than high level methods.Because of this methods yts python downloader is also a python binding for YIFY API.\r\n\r\n\r\n***\r\n###YTS\r\n```\r\nraw_torrents()\r\nraw_latest()\r\nraw_upcoming()\r\nraw_search()\r\nraw_requests_confirmed()\r\n```\r\nAll arguments are similar to the native methods above. \r\n\r\n###Movie\r\n```\r\nraw_movie() \r\n``` \r\n***\r\n\r\n\r\n\r\n### Author\r\nyts is created by Naren Arya @ https://github.com/narenaryan a programmer,a blogger and an absolutely funny guy.\r\n\r\n### Source & Contribute\r\nyts project is open for contribution.For contributing visit https://github.com/narenaryan/yts\r\n\r\n### Support or Contact\r\nHaving trouble with API? mail me at narenarya@live.com.\r\nCheckout the API and experiment with it.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}